[
    {
        "id": "294921acd055a593",
        "type": "tab",
        "label": "weather_project",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "30a1eb6b21a99b75",
        "type": "http in",
        "z": "294921acd055a593",
        "name": "Weather Dashboard Endpoint",
        "url": "/weather/dashboard",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 200,
        "wires": [
            [
                "38dc5d8c71b29f3a"
            ]
        ]
    },
    {
        "id": "a4b155534cef6392",
        "type": "template",
        "z": "294921acd055a593",
        "name": "HTML Content",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n\n<head>\n  <meta charset=\"utf-8\">\n  <meta name=\"viewport\" content=\"width=device-width\">\n  <title>Weather Dashboard</title>\n  <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\" rel=\"stylesheet\" type=\"text/css\" />\n  <style>\n    .section {\n      top: 0;\n      width: 100%;\n      z-index: 999;\n      background-color: #111111;\n      color: #ccc;\n      border-top: solid 3px #1E97E3;\n      height: 50px;\n    }\n\n\n    .menuitem {\n      margin-top: 12px;\n      display: inline-block;\n      width: 100px;\n    }\n\n    .menulink {\n      height: 40px;\n      padding: 7px;\n      border-bottom: 3px solid transparent;\n    }\n\n    .menulink:hover {\n      border-bottom: 3px solid #1E97E3;\n      text-decoration: none;\n      color: #1E97E3;\n    }\n\n    .footer {\n      margin-top: 12px;\n    }\n\n    .liitem {\n      height: 45px;\n    }\n\n    .skillLine {\n      display: inline-block;\n      width: 100%;\n      min-height: 90px;\n      padding: 3px 4px;\n    }\n\n    skillLineDefault {\n      padding: 3px 4px;\n    }\n\n    div.skill {\n      background: #F58723;\n      border-radius: 3px;\n      color: white;\n      font-weight: bold;\n      padding: 3px 4px;\n      width: 70px;\n    }\n\n    .rating {\n      margin-left: 30px;\n    }\n\n    .footerQR {\n      margin-left: 30%;\n    }\n\n    .leftText {\n      font-size: 41px;\n    }\n\n    .rightText {\n      font-size: 41px;\n      background: #F58723;\n      border-radius: 3px;\n      color: white;\n      padding: 3px 4px;\n    }\n  </style>\n</head>\n\n<body>\n  <div class=\"container\">\n    <div class=\"row\" style=\"margin-top: 30px\">\n      <div class=\"col-xs-10 col-sm-8 col-sm-offset-2 col-xs-offset-1\">\n        <form id=\"searchForm\">\n          <div class=\"form-group\">\n            <div class=\"input-group\">\n              <input id=\"inputSearch\" type=\"text\" class=\"form-control input-lg\" name=\"search\"\n                placeholder=\"Search 'city name' or 'city, country code' \" />\n              <span class=\"input-group-btn\">\"\n                <button id=\"searchSubmit\" type=\"submit\" class=\"btn btn-primary btn-lg ladda-button\"\n                  data-style=\"expand-right\" type=\"submit\"><span class=\"ladda-label\">Search</span></button>\n              </span>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n    <h2 style=\"text-align: center;margin: auto\">{{result.header}}</h2>\n    {{#req.query.search}}\n    <div class=\"container\">\n      <br />\n      <div class=\"row\">\n        <div class=\"col-sm-6 col-lg-4\">\n          <div class=\"panel panel-primary\" style=\"height: 450px;\">\n            <div class=\"panel-heading\">\n              <h4 class=\"text-center\">Current Forecast<span class=\"glyphicon glyphicon-asterisk pull-right\"></span>\n              </h4>\n            </div>\n            <div class=\"panel-body text-center\">\n              <p>\n                <strong>{{result.current.description}}</strong>\n                <img src=\"https://openweathermap.org/img/wn/{{result.current.icon}}@2x.png\" />\n              </p>\n            </div>\n            <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item liitem\"><strong>Temperature:</strong>\n                <span class=\"pull-right\">{{result.current.temperature}}</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Feels Like:</strong>\n                <span class=\"pull-right\">{{result.current.feelsLike}}</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Humidity:</strong>\n                <span class=\"pull-right\">{{result.current.humidity}}</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Sunrise:</strong>\n                <span class=\"pull-right\">{{result.current.sunrise}}</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Sunset:</strong>\n                <span class=\"pull-right\">{{result.current.sunset}}</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"col-sm-6 col-lg-4\">\n          <div class=\"panel panel-primary\" style=\"height: 450px;\">\n            <div class=\"panel-heading\">\n              <h4 class=\"text-center\">5 Day Weather Forecast<span class=\"glyphicon glyphicon-list pull-right\"></span>\n              </h4>\n            </div>\n            <table class=\"table table-hover\">\n              {{#result.fiveDay}}\n              <tr>\n                <td>{{date}}</td>\n                <td>{{temperature}} - {{description}}</td>\n                <td><img style=\"margin-top: -10px;\" src=\"https://openweathermap.org/img/wn/{{icon}}.png\" /></td>\n              </tr>\n              {{/result.fiveDay}}\n            </table>\n          </div>\n        </div>\n        <div class=\"col-sm-6 col-lg-4\">\n          <div class=\"panel panel-primary\" style=\"height: 450px;\">\n            <div class=\"panel-heading\">\n              <h4 class=\"text-center\">About United Kingdom <span class=\"glyphicon glyphicon-map-marker pull-right\"></span>\n              </h4>\n            </div>\n            <div class=\"panel-body text-center\">\n              <img src=\"https://cdn.wallpapersafari.com/51/1/nVeBg3.jpg\" width=\"20%\" />\n            </div>\n            <ul class=\"list-group list-group-flush\">\n              <li class=\"list-group-item liitem\"><strong>Code:</strong>\n                <span class=\"pull-right\">uk</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Capital:</strong>\n                <span class=\"pull-right\">London</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Population:</strong>\n                <span class=\"pull-right\">67,961,439</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Currencies:</strong>\n                <span class=\"pull-right\">Pound sterling</span>\n              </li>\n              <li class=\"list-group-item liitem\"><strong>Languages:</strong>\n                <span class=\"pull-right\">English</span>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </div>\n    {{/req.query.search}}\n  </div>\n  <script src=\"https://code.jquery.com/jquery.min.js\"></script>\n  <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/js/bootstrap.min.js\"></script>\n  <script type=\"text/javascript\">\n    $(document).ready(function (e) {\n      $(\"#searchSubmit\").click(function (e) {\n        e.preventDefault()\n        var search = $('#inputSearch').val()\n        var url = location.protocol + \"//\" + location.host + location.pathname\n        if (!search) return alert(\"Please provide a search term\");\n        url += '?search=' + search;\n        window.location.replace(url);\n      });\n    });\n  </script>\n</body>\n\n</html>",
        "output": "str",
        "x": 320,
        "y": 860,
        "wires": [
            [
                "9a093b6ed1b56145",
                "e30806361021241c"
            ]
        ]
    },
    {
        "id": "9a093b6ed1b56145",
        "type": "http response",
        "z": "294921acd055a593",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 590,
        "y": 860,
        "wires": []
    },
    {
        "id": "dab93fac40aa5247",
        "type": "http request",
        "z": "294921acd055a593",
        "name": "Own Get Current",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 490,
        "y": 320,
        "wires": [
            [
                "2237e4d4b0b3f30e"
            ]
        ]
    },
    {
        "id": "0c62fe3a2458dee1",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Prep",
        "func": "msg.url = flow.get('owmUrlCurrentForecast');\nmsg.url += `?appid=${flow.get('owmAppId')}`;\nmsg.url += `&units=${flow.get('owmUnits')}`;\nmsg.url += `&q=${msg.req.query.search}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 320,
        "wires": [
            [
                "dab93fac40aa5247"
            ]
        ]
    },
    {
        "id": "207371e49be12a52",
        "type": "inject",
        "z": "294921acd055a593",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 100,
        "wires": [
            [
                "6d4b38b8b78f1c6b"
            ]
        ]
    },
    {
        "id": "6d4b38b8b78f1c6b",
        "type": "change",
        "z": "294921acd055a593",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "owmAppId",
                "pt": "flow",
                "to": "11838f8abc01de53f898d9460fcf4d90",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "owmUnits",
                "pt": "flow",
                "to": "metric",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "owmUrlCurrentForecast",
                "pt": "flow",
                "to": "https://api.openweathermap.org/data/2.5/weather",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "dateParams",
                "pt": "flow",
                "to": "{  \"hour\":\"2-digit\",   \"minute\":\"2-digit\",   \"hour12\": true }",
                "tot": "json"
            },
            {
                "t": "set",
                "p": "owmTemperatureUnit",
                "pt": "flow",
                "to": "°C",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "owmUrl5DayForecast",
                "pt": "flow",
                "to": "https://api.openweathermap.org/data/2.5/forecast",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "restCountryUrl",
                "pt": "flow",
                "to": "https://restcountries.com/v3.1/all",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "654bbb33f8992d21",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Set Memory Variables",
        "info": "",
        "x": 160,
        "y": 40,
        "wires": []
    },
    {
        "id": "8393758a24c04140",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Weather Dashboard Flow",
        "info": "",
        "x": 170,
        "y": 160,
        "wires": []
    },
    {
        "id": "7804111b70df340b",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Finalize",
        "info": "",
        "x": 190,
        "y": 800,
        "wires": []
    },
    {
        "id": "41ba284be90f39c4",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Get Current Forecast",
        "info": "",
        "x": 160,
        "y": 280,
        "wires": []
    },
    {
        "id": "2375d971785382be",
        "type": "debug",
        "z": "294921acd055a593",
        "name": "msg.error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "error",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 460,
        "y": 660,
        "wires": []
    },
    {
        "id": "2f24492bf052c2f0",
        "type": "link out",
        "z": "294921acd055a593",
        "name": "Run Fetch 5 Day Forecast",
        "mode": "link",
        "links": [
            "c1cc29e3bc36a830"
        ],
        "x": 855,
        "y": 320,
        "wires": []
    },
    {
        "id": "44f0cbbf133d324f",
        "type": "link in",
        "z": "294921acd055a593",
        "name": "Finalize",
        "links": [
            "3d6f0ca2ec925c87",
            "d35b1182e7295f68",
            "a96eb04be61af389",
            "cd1ac433e4f5a0a5",
            "785cc542bb0143e0"
        ],
        "x": 135,
        "y": 860,
        "wires": [
            [
                "a4b155534cef6392"
            ]
        ]
    },
    {
        "id": "9f54085b91781df6",
        "type": "link in",
        "z": "294921acd055a593",
        "name": "Get Current Forecast",
        "links": [
            "9050b71c332e6421"
        ],
        "x": 75,
        "y": 320,
        "wires": [
            [
                "0c62fe3a2458dee1"
            ]
        ]
    },
    {
        "id": "9050b71c332e6421",
        "type": "link out",
        "z": "294921acd055a593",
        "name": "Run Get Current Forecast",
        "mode": "link",
        "links": [
            "9f54085b91781df6"
        ],
        "x": 825,
        "y": 180,
        "wires": []
    },
    {
        "id": "cdcff412205b0155",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Catch Errors",
        "info": "",
        "x": 150,
        "y": 640,
        "wires": []
    },
    {
        "id": "eef509a7d5d83baf",
        "type": "catch",
        "z": "294921acd055a593",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 240,
        "y": 680,
        "wires": [
            [
                "2375d971785382be",
                "b143098610b12a83"
            ]
        ]
    },
    {
        "id": "2237e4d4b0b3f30e",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Process Result",
        "func": "let errMsg=null\nif(msg.statusCode >= 400){\n    try{\n        errMsg=msg.payload.message \n     \n    }catch(e)\n    {\n        errMsg = msg.payload  \n    }\n    throw new Error(errMsg)\n}\nmsg.countryCode = msg.payload.sys.country\nmsg.result.heade = msg.payload.name\nlet tmpSunrise = msg.payload.sys.sunrise *1000\ntmpSunrise = new Date(tmpSunrise)\nlet sunrise= tmpSunrise.toLocaleString([], flow.get ('dateParams'))\nlet tmpSunset = msg.payload.sys.sunset *1000\ntmpSunset = new Date(tmpSunset)\nlet sunset= tmpSunset.toLocaleString([], flow.get ('dateParams'))\n \nmsg.result.current = {\n\n    description:msg.payload.weather[0].description,\n    icon: msg.payload.weather[0].icon,\n    temperature: `${Math.round(msg.payload.main.temp)}${flow.get('owmTemperatureUnit')}`,\n    feelsLike: `${Math.round(msg.payload.main.feels_like)}${flow.get('owmTemperatureUnit')}`,\n    humidity: `${msg.payload.main.humidity}%`,\n    sunrise,\n    sunset\n\n}\n\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 320,
        "wires": [
            [
                "2f24492bf052c2f0"
            ]
        ]
    },
    {
        "id": "3d6f0ca2ec925c87",
        "type": "link out",
        "z": "294921acd055a593",
        "name": "Run Finalize",
        "mode": "link",
        "links": [
            "44f0cbbf133d324f"
        ],
        "x": 655,
        "y": 720,
        "wires": []
    },
    {
        "id": "b143098610b12a83",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Prep Error",
        "func": "msg.result.header= `${msg.error.message} - \"${msg.req.query.search}\"`\ndelete msg.req.query.search\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 470,
        "y": 720,
        "wires": [
            [
                "3d6f0ca2ec925c87"
            ]
        ]
    },
    {
        "id": "ac99c2e0c36a5216",
        "type": "switch",
        "z": "294921acd055a593",
        "name": "",
        "property": "req.query.search",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "false",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "9050b71c332e6421"
            ],
            [
                "d35b1182e7295f68"
            ]
        ]
    },
    {
        "id": "d35b1182e7295f68",
        "type": "link out",
        "z": "294921acd055a593",
        "name": "Run Finalize",
        "mode": "link",
        "links": [
            "44f0cbbf133d324f"
        ],
        "x": 825,
        "y": 220,
        "wires": []
    },
    {
        "id": "e30806361021241c",
        "type": "debug",
        "z": "294921acd055a593",
        "name": "debug 1",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 600,
        "y": 920,
        "wires": []
    },
    {
        "id": "38dc5d8c71b29f3a",
        "type": "change",
        "z": "294921acd055a593",
        "name": "Prep Reponse",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "{}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 440,
        "y": 200,
        "wires": [
            [
                "ac99c2e0c36a5216"
            ]
        ]
    },
    {
        "id": "3332ca3c0d670e03",
        "type": "http request",
        "z": "294921acd055a593",
        "name": "Own Get 5 Day",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 440,
        "wires": [
            [
                "37b50957d5a332ae"
            ]
        ]
    },
    {
        "id": "16d15c52788ac22f",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Prep",
        "func": "msg.url = flow.get('owmUrl5DayForecast');\nmsg.url += `?appid=${flow.get('owmAppId')}`;\nmsg.url += `&units=${flow.get('owmUnits')}`;\nmsg.url += `&q=${msg.req.query.search}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 440,
        "wires": [
            [
                "3332ca3c0d670e03"
            ]
        ]
    },
    {
        "id": "785cc542bb0143e0",
        "type": "link out",
        "z": "294921acd055a593",
        "name": "Run Fetch Country Info",
        "mode": "link",
        "links": [
            "44f0cbbf133d324f"
        ],
        "x": 875,
        "y": 440,
        "wires": []
    },
    {
        "id": "c1cc29e3bc36a830",
        "type": "link in",
        "z": "294921acd055a593",
        "name": "Fetch 5 Day Forecast",
        "links": [
            "2f24492bf052c2f0"
        ],
        "x": 75,
        "y": 440,
        "wires": [
            [
                "16d15c52788ac22f"
            ]
        ]
    },
    {
        "id": "37b50957d5a332ae",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Process Result",
        "func": "let errMsg=null\nif(msg.statusCode >= 400){\n    try{\n        errMsg=msg.payload.message \n     \n    }catch(e)\n    {\n        errMsg = msg.payload  \n    }\n    throw new Error(errMsg)\n}\nmsg.result.fiveDay= []\nlet date\nlet tmpDate = null\nlet tmpEntry\nlet x = 0\nlet y = msg.payload.list.length\nfor(;x<y;x++){\n    tmpEntry= msg.payload.list[x]\n    tmpDate= tmpEntry.dt *1000\n    tmpDate = new Date(tmpDate)\n    date= `${tmpDate.getDate()}/${(tmpDate.getMonth() + 1)}`\n   msg.result.fiveDay.push({\n    date,\n    temperature: `${Math.round(tmpEntry.main.temp)}${flow.get('owmTemperatureUnit')}`,\n    description: tmpEntry.weather[0].description,\n    icon: tmpEntry.weather[0].icon\n});\n\nif (tmpEntry.temp && tmpEntry.temp.max && tmpEntry.weather && tmpEntry.weather[0] && tmpEntry.weather[0].description) {\n    msg.result.fiveDay[msg.result.fiveDay.length - 1].temperature += ` ${tmpEntry.weather[0].description}`;\n}\n\n\n\n\n    if (x==4) break\n}\nreturn msg;\n\n\n\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 440,
        "wires": [
            [
                "785cc542bb0143e0"
            ]
        ]
    },
    {
        "id": "b43f596bd07562f4",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Prep",
        "func": "msg.url = `${flow.get('restCountryUrl')}${msg.countryCode}`\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 560,
        "wires": [
            [
                "4391b34ccb0c2b99"
            ]
        ]
    },
    {
        "id": "cf8397004262c139",
        "type": "link out",
        "z": "294921acd055a593",
        "name": "Run Finalize",
        "mode": "link",
        "links": [],
        "x": 885,
        "y": 560,
        "wires": []
    },
    {
        "id": "f916a185ca7c57ac",
        "type": "link in",
        "z": "294921acd055a593",
        "name": "Get Fetch Country Info",
        "links": [
            "fa8bd1b055511d9f"
        ],
        "x": 75,
        "y": 560,
        "wires": [
            [
                "b43f596bd07562f4"
            ]
        ]
    },
    {
        "id": "e1d130a6523b672a",
        "type": "function",
        "z": "294921acd055a593",
        "name": "Process Result",
        "func": "let errMsg=null\nif(msg.statusCode >= 400){\n    try{\n        errMsg=msg.payload.message \n     \n    }catch(e)\n    {\n        errMsg = msg.payload  \n    }\n    throw new Error(errMsg)\n}\n// Initialize msg.result if it doesn't exist\nmsg.result = msg.result || {};\n\n// Append native name to header\nif (msg.payload.nativeName) {\n    if (!msg.result.header) {\n        msg.result.header = '';\n    }\n    msg.result.header += `, ${msg.payload.nativeName}`;\n}\n\n// Initialize arrays for currencies and languages\nlet currencies = [];\nlet languages = [];\n\n// Assuming you already have retrieved data about a city from the REST Countries API and stored it in msg.payload\n\n// Assuming you already have retrieved data about Morocco from the REST Countries API and stored it in msg.payload\n\n// Check if data is available for Morocco\nif (msg.payload) {\n    const countryData = msg.payload;\n\n    // Extract relevant parameters\n    const name = countryData.name || 'Unknown';\n    const code = countryData.alpha2Code || 'Unknown';\n    const capital = countryData.capital || 'Unknown';\n    const population = Intl.NumberFormat().format(countryData.population || 0);\n\n    // Currencies and languages might be arrays, so we need to join them if they exist\n    const currencies = countryData.currencies ? countryData.currencies.map(currency => currency.name).join(', ') : 'Unknown';\n    const languages = countryData.languages ? countryData.languages.map(language => language.name).join(', ') : 'Unknown';\n\n    const flagUrl = countryData.flag || 'Unknown';\n\n    // Create the result object\n    const result = {\n        name: name,\n        code: code,\n        capital: capital,\n        population: population,\n        currencies: currencies,\n        languages: languages,\n        flagUrl: flagUrl\n    };\n\n    // Now you can use the result object as needed\n    msg.result = result;\n} else {\n    // If data is not available, handle it accordingly\n    msg.result = {\n        name: 'Unknown',\n        code: 'Unknown',\n        capital: 'Unknown',\n        population: 'Unknown',\n        currencies: 'Unknown',\n        languages: 'Unknown',\n        flagUrl: 'Unknown'\n    };\n}\n\n\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 560,
        "wires": [
            [
                "cf8397004262c139"
            ]
        ]
    },
    {
        "id": "c74c10705fea330b",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Fetch Country Info",
        "info": "",
        "x": 150,
        "y": 520,
        "wires": []
    },
    {
        "id": "4391b34ccb0c2b99",
        "type": "http request",
        "z": "294921acd055a593",
        "name": " Get Country Info",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 520,
        "y": 560,
        "wires": [
            [
                "e1d130a6523b672a"
            ]
        ]
    },
    {
        "id": "eeac05afbe1bd2ff",
        "type": "comment",
        "z": "294921acd055a593",
        "name": "Fetch 5 Day Forecast",
        "info": "",
        "x": 160,
        "y": 400,
        "wires": []
    }
]